clear_parser_instances: clearing all instances of Test
Creating NEW ParserInstance            of object Test, class Parser
AUTOMETHOD get_structure_ref called on ParserInstance=SCALAR(Test#)
Matched field A=0110 at 5 using RE 0110
Matched field B=101 at 9 using RE \G[0-1]{3}
Matched field elements_ref=00 at 12 using RE \G[0-1]{2}
Matched field elements_ref=11 at 16 using RE \G[0-1]{2}
Registering instance T0005                     of object Test
{
  'Instance' => {
                  'parent_class' => 'Parser',
                  'parent_name' => 'Test',
                  'parent_ref' => bless( do{\(my $o = undef)}, 'Parser' )
                },
  'Named' => {
               'name' => 'T0005'
             },
  'ParserInstance' => {
                        'length' => '13',
                        'locus' => '5',
                        'sequence_ref' => bless( do{\(my $o = undef)}, 'Sequence' ),
                        'start_pos' => 0,
                        'transcription_ref' => {
                                                 'A' => [
                                                          '0110',
                                                          '5',
                                                          '4'
                                                        ],
                                                 'B' => [
                                                          '101',
                                                          '9',
                                                          '3'
                                                        ],
                                                 'elements_ref' => [
                                                                     [
                                                                       '00',
                                                                       '12',
                                                                       '2'
                                                                     ],
                                                                     [
                                                                       '11',
                                                                       '16',
                                                                       '2'
                                                                     ]
                                                                   ],
                                                 'elements_ref_linker' => [
                                                                            [
                                                                              '01',
                                                                              '14',
                                                                              '2'
                                                                            ]
                                                                          ]
                                               },
                        'transcription_valid_flag' => 1,
                        'upper_ref' => ''
                      }
};

name => T0005
[32m.....
A => [0m[0m[32m0110
[0m[32mB => [0m[7m[32m101
[0m[32melements_ref => [0m[0m[32m00
[0m[32melements_ref_linker => 01
[0m[32melements_ref => [0m[7m[32m11
[0m[32m[0m[32m....................................
[0m
Creating NEW ParserInstance            of object Test, class Parser
Matched field A=0110 at 33 using RE 0110
Matched field B=010 at 37 using RE \G[0-1]{3}
Matched field elements_ref=11 at 40 using RE \G[0-1]{2}
Matched field elements_ref=00 at 44 using RE \G[0-1]{2}
Matched field elements_ref=11 at 48 using RE \G[0-1]{2}
Matched field elements_ref=00 at 52 using RE \G[0-1]{2}
Registering instance T0033                     of object Test
{
  'Instance' => {
                  'parent_class' => 'Parser',
                  'parent_name' => 'Test',
                  'parent_ref' => bless( do{\(my $o = undef)}, 'Parser' )
                },
  'Named' => {
               'name' => 'T0033'
             },
  'ParserInstance' => {
                        'length' => '21',
                        'locus' => '33',
                        'sequence_ref' => bless( do{\(my $o = undef)}, 'Sequence' ),
                        'start_pos' => 6,
                        'transcription_ref' => {
                                                 'A' => [
                                                          '0110',
                                                          '33',
                                                          '4'
                                                        ],
                                                 'B' => [
                                                          '010',
                                                          '37',
                                                          '3'
                                                        ],
                                                 'elements_ref' => [
                                                                     [
                                                                       '11',
                                                                       '40',
                                                                       '2'
                                                                     ],
                                                                     [
                                                                       '00',
                                                                       '44',
                                                                       '2'
                                                                     ],
                                                                     [
                                                                       '11',
                                                                       '48',
                                                                       '2'
                                                                     ],
                                                                     [
                                                                       '00',
                                                                       '52',
                                                                       '2'
                                                                     ]
                                                                   ],
                                                 'elements_ref_linker' => [
                                                                            [
                                                                              '01',
                                                                              '42',
                                                                              '2'
                                                                            ],
                                                                            [
                                                                              '01',
                                                                              '46',
                                                                              '2'
                                                                            ],
                                                                            [
                                                                              '01',
                                                                              '50',
                                                                              '2'
                                                                            ]
                                                                          ]
                                               },
                        'transcription_valid_flag' => 1,
                        'upper_ref' => ''
                      }
};

name => T0033
[32m...........................
A => [0m[0m[32m0110
[0m[32mB => [0m[7m[32m010
[0m[32melements_ref => [0m[0m[32m11
[0m[32melements_ref_linker => 01
[0m[32melements_ref => [0m[7m[32m00
[0m[32melements_ref_linker => 01
[0m[32melements_ref => [0m[0m[32m11
[0m[32melements_ref_linker => 01
[0m[32melements_ref => [0m[7m[32m00
[0m[32m[0m[32m[0m
Creating NEW ParserInstance            of object Test, class Parser
Matched field A=0110 at 39 using RE 0110
Matched field B=100 at 43 using RE \G[0-1]{3}
Matched field elements_ref=01 at 46 using RE \G[0-1]{2}
Registering instance T0039                     of object Test
{
  'Instance' => {
                  'parent_class' => 'Parser',
                  'parent_name' => 'Test',
                  'parent_ref' => bless( do{\(my $o = undef)}, 'Parser' )
                },
  'Named' => {
               'name' => 'T0039'
             },
  'ParserInstance' => {
                        'length' => '9',
                        'locus' => '39',
                        'sequence_ref' => bless( do{\(my $o = undef)}, 'Sequence' ),
                        'start_pos' => 39,
                        'transcription_ref' => {
                                                 'A' => [
                                                          '0110',
                                                          '39',
                                                          '4'
                                                        ],
                                                 'B' => [
                                                          '100',
                                                          '43',
                                                          '3'
                                                        ],
                                                 'elements_ref' => [
                                                                     [
                                                                       '01',
                                                                       '46',
                                                                       '2'
                                                                     ]
                                                                   ]
                                               },
                        'transcription_valid_flag' => 1,
                        'upper_ref' => ''
                      }
};

name => T0039
[32mA => [0m[0m[32m0110
[0m[32mB => [0m[7m[32m100
[0m[32melements_ref => [0m[0m[32m01
[0m[32m[0m[32m......
[0m
Creating NEW ParserInstance            of object Test, class Parser
NOTE: couldn't match regexp for field A using RE 0110
called DEMOLISH on instance Test# of object Test of class Parser
{
  'Instantiable' => {
                      'instances' => [
                                       bless( do{\(my $o = undef)}, 'ParserInstance' ),
                                       bless( do{\(my $o = undef)}, 'ParserInstance' ),
                                       bless( do{\(my $o = undef)}, 'ParserInstance' )
                                     ],
                      'instances_index' => {
                                             'T0005' => 0,
                                             'T0033' => 1,
                                             'T0039' => 2
                                           }
                    },
  'Named' => {
               'name' => 'Test'
             },
  'Parser' => {
                'mutation_rate_ref' => {
                                         'A' => '1',
                                         'B' => '1',
                                         'elements_ref' => '1',
                                         'elements_ref_linker' => '1'
                                       },
                'structure_ref' => [
                                     [
                                       'A',
                                       '0110'
                                     ],
                                     [
                                       'B',
                                       '\\G[0-1]{3}'
                                     ],
                                     [
                                       'elements_ref',
                                       '\\G[0-1]{2}',
                                       '\\G01'
                                     ]
                                   ]
              },
  'Set' => {
             'element_class' => 'Parser',
             'elements_ref' => []
           }
};

PARSING DOMAIN....
clear_parser_instances: clearing all instances of Domain
clear_parser_instances: clearing all instances of ProtoDomain
Creating NEW ParserInstance            of object Domain, class Parser
Matched field S=0110 at 5 using RE 0110
Matching subfield PD
Creating NEW ParserInstance            of object ProtoDomain, class Parser
Matched field A=10 at 9 using RE ..
Matched field B=10 at 11 using RE ..
Matched field B=11 at 15 using RE ..
Matched subfield PD
Matching subfield PD
Creating NEW ParserInstance            of object ProtoDomain, class Parser
Matched field A=10 at 20 using RE ..
Matched field B=00 at 22 using RE ..
Matched field B=11 at 26 using RE ..
Matched field B=00 at 30 using RE ..
Matched field B=11 at 34 using RE ..
Matched field B=10 at 38 using RE ..
Matched subfield PD
Matched field T=110 at 40 using RE \G...
Registering instance XD0005                    of object Domain
Registering instance XPD0009                   of object ProtoDomain
Registering instance XPD0020                   of object ProtoDomain
DUMPING PARSERS
{
  'Instantiable' => {
                      'instances' => [
                                       bless( do{\(my $o = undef)}, 'ParserInstance' )
                                     ],
                      'instances_index' => {
                                             'XD0005' => 0
                                           }
                    },
  'Named' => {
               'name' => 'Domain'
             },
  'Parser' => {
                'mutation_rate_ref' => {
                                         'PD' => '1',
                                         'PD_linker' => '1',
                                         'S' => '0',
                                         'T' => '1'
                                       },
                'structure_ref' => [
                                     [
                                       'S',
                                       '0110'
                                     ],
                                     [
                                       'PD',
                                       bless( do{\(my $o = undef)}, 'Parser' ),
                                       '\\G(?!110)...'
                                     ],
                                     [
                                       'T',
                                       '\\G...'
                                     ]
                                   ]
              },
  'Set' => {
             'element_class' => 'Parser',
             'elements_ref' => [
                                 $VAR1->{'Parser'}{'structure_ref'}[1][1]
                               ]
           }
};

{
  'Instantiable' => {
                      'instances' => [
                                       bless( do{\(my $o = undef)}, 'ParserInstance' ),
                                       bless( do{\(my $o = undef)}, 'ParserInstance' )
                                     ],
                      'instances_index' => {
                                             'XPD0009' => 0,
                                             'XPD0020' => 1
                                           }
                    },
  'Named' => {
               'name' => 'ProtoDomain'
             },
  'Parser' => {
                'mutation_rate_ref' => {
                                         'A' => '1',
                                         'B' => '1',
                                         'B_linker' => '1'
                                       },
                'structure_ref' => [
                                     [
                                       'A',
                                       '..'
                                     ],
                                     [
                                       'B',
                                       '..',
                                       '\\G(?!11)..'
                                     ]
                                   ]
              },
  'Set' => {
             'element_class' => 'Parser',
             'elements_ref' => []
           }
};

DUMPING DOMAIN INSTANCE
{
  'Instance' => {
                  'parent_class' => 'Parser',
                  'parent_name' => 'Domain',
                  'parent_ref' => bless( do{\(my $o = undef)}, 'Parser' )
                },
  'Named' => {
               'name' => 'XD0005'
             },
  'ParserInstance' => {
                        'length' => '38',
                        'locus' => '5',
                        'sequence_ref' => bless( do{\(my $o = undef)}, 'Sequence' ),
                        'start_pos' => 0,
                        'transcription_ref' => {
                                                 'PD' => [
                                                           [
                                                             bless( do{\(my $o = undef)}, 'ParserInstance' ),
                                                             '9',
                                                             '8'
                                                           ],
                                                           [
                                                             bless( do{\(my $o = undef)}, 'ParserInstance' ),
                                                             '20',
                                                             '20'
                                                           ]
                                                         ],
                                                 'PD_linker' => [
                                                                  [
                                                                    '111',
                                                                    '17',
                                                                    '3'
                                                                  ]
                                                                ],
                                                 'S' => [
                                                          '0110',
                                                          '5',
                                                          '4'
                                                        ],
                                                 'T' => [
                                                          '110',
                                                          '40',
                                                          '3'
                                                        ]
                                               },
                        'transcription_valid_flag' => 1,
                        'upper_ref' => ''
                      }
};

name => XD0005
[32m.....
S => [0m[0m[32m0110
[0m[32mPD => [0m
  name => XPD0009
[31m  A => [0m[0m[31m10
[0m[31m  B => [0m[7m[31m10
[0m[31m  B_linker => 00
[0m[31m  B => [0m[0m[31m11
[0m[31m[0m[31m[0m[32mPD_linker => 111
[0m[32mPD => [0m
  name => XPD0020
[31m  A => [0m[0m[31m10
[0m[31m  B => [0m[7m[31m00
[0m[31m  B_linker => 01
[0m[31m  B => [0m[0m[31m11
[0m[31m  B_linker => 10
[0m[31m  B => [0m[7m[31m00
[0m[31m  B_linker => 00
[0m[31m  B => [0m[0m[31m11
[0m[31m  B_linker => 00
[0m[31m  B => [0m[7m[31m10
[0m[31m[0m[31m[0m[32m[0m[32mT => [0m[7m[32m110
[0m[32m...........
[0m
.....01101010001111110000111100000110010110...........
DUMPING PROTODOMAIN INSTANCES
{
  'Instance' => {
                  'parent_class' => 'Parser',
                  'parent_name' => 'ProtoDomain',
                  'parent_ref' => bless( do{\(my $o = undef)}, 'Parser' )
                },
  'Named' => {
               'name' => 'XPD0009'
             },
  'ParserInstance' => {
                        'length' => '8',
                        'locus' => '9',
                        'sequence_ref' => bless( do{\(my $o = undef)}, 'Sequence' ),
                        'start_pos' => 9,
                        'transcription_ref' => {
                                                 'A' => [
                                                          '10',
                                                          '9',
                                                          '2'
                                                        ],
                                                 'B' => [
                                                          [
                                                            '10',
                                                            '11',
                                                            '2'
                                                          ],
                                                          [
                                                            '11',
                                                            '15',
                                                            '2'
                                                          ]
                                                        ],
                                                 'B_linker' => [
                                                                 [
                                                                   '00',
                                                                   '13',
                                                                   2
                                                                 ]
                                                               ]
                                               },
                        'transcription_valid_flag' => 1,
                        'upper_ref' => bless( do{\(my $o = undef)}, 'ParserInstance' )
                      }
};

{
  'Instance' => {
                  'parent_class' => 'Parser',
                  'parent_name' => 'ProtoDomain',
                  'parent_ref' => bless( do{\(my $o = undef)}, 'Parser' )
                },
  'Named' => {
               'name' => 'XPD0020'
             },
  'ParserInstance' => {
                        'length' => '20',
                        'locus' => '20',
                        'sequence_ref' => bless( do{\(my $o = undef)}, 'Sequence' ),
                        'start_pos' => 20,
                        'transcription_ref' => {
                                                 'A' => [
                                                          '10',
                                                          '20',
                                                          '2'
                                                        ],
                                                 'B' => [
                                                          [
                                                            '00',
                                                            '22',
                                                            '2'
                                                          ],
                                                          [
                                                            '11',
                                                            '26',
                                                            '2'
                                                          ],
                                                          [
                                                            '00',
                                                            '30',
                                                            '2'
                                                          ],
                                                          [
                                                            '11',
                                                            '34',
                                                            '2'
                                                          ],
                                                          [
                                                            '10',
                                                            '38',
                                                            '2'
                                                          ]
                                                        ],
                                                 'B_linker' => [
                                                                 [
                                                                   '01',
                                                                   '24',
                                                                   2
                                                                 ],
                                                                 [
                                                                   '10',
                                                                   '28',
                                                                   2
                                                                 ],
                                                                 [
                                                                   '00',
                                                                   '32',
                                                                   2
                                                                 ],
                                                                 [
                                                                   '00',
                                                                   '36',
                                                                   2
                                                                 ]
                                                               ]
                                               },
                        'transcription_valid_flag' => 1,
                        'upper_ref' => bless( do{\(my $o = undef)}, 'ParserInstance' )
                      }
};

FIELD MANIPULATION
BEFORE: 000000110101000111111000011110000011001011010001110100
AFTER:  000001001********1111000011110000011001011010001110100
FIELD MUTATION
mutate_subseq: mutating 20 sequence bits starting at 20 with probability 1
mutate_subseq: mutating bit at position 20, 1 -> 0
mutate_subseq: mutating bit at position 21, 0 -> 1
mutate_subseq: mutating bit at position 22, 0 -> 1
mutate_subseq: mutating bit at position 23, 0 -> 1
mutate_subseq: mutating bit at position 24, 0 -> 1
mutate_subseq: mutating bit at position 25, 1 -> 0
mutate_subseq: mutating bit at position 26, 1 -> 0
mutate_subseq: mutating bit at position 27, 1 -> 0
mutate_subseq: mutating bit at position 28, 1 -> 0
mutate_subseq: mutating bit at position 29, 0 -> 1
mutate_subseq: mutating bit at position 30, 0 -> 1
mutate_subseq: mutating bit at position 31, 0 -> 1
mutate_subseq: mutating bit at position 32, 0 -> 1
mutate_subseq: mutating bit at position 33, 0 -> 1
mutate_subseq: mutating bit at position 34, 1 -> 0
mutate_subseq: mutating bit at position 35, 1 -> 0
mutate_subseq: mutating bit at position 36, 0 -> 1
mutate_subseq: mutating bit at position 37, 0 -> 1
mutate_subseq: mutating bit at position 38, 1 -> 0
mutate_subseq: mutating bit at position 39, 0 -> 1
mutate_subseq: mutated 20 sequence bits
mutated_field: mutated 20 bits in field PD
BEFORE: 000000110101000111111000011110000011001011010001110100
AFTER:  000001001********1110111100001111100110111010001110100
GLOBAL MUTATION
clear_parser_instances: clearing all instances of Domain
clear_parser_instances: clearing all instances of ProtoDomain
Creating NEW ParserInstance            of object Domain, class Parser
Matched field S=0110 at 5 using RE 0110
Matching subfield PD
Creating NEW ParserInstance            of object ProtoDomain, class Parser
Matched field A=10 at 9 using RE ..
Matched field B=10 at 11 using RE ..
Matched field B=11 at 15 using RE ..
Matched subfield PD
Matching subfield PD
Creating NEW ParserInstance            of object ProtoDomain, class Parser
Matched field A=10 at 20 using RE ..
Matched field B=00 at 22 using RE ..
Matched field B=11 at 26 using RE ..
Matched field B=00 at 30 using RE ..
Matched field B=11 at 34 using RE ..
Matched field B=10 at 38 using RE ..
Matched subfield PD
Matched field T=110 at 40 using RE \G...
Registering instance D0005                     of object Domain
Registering instance PD0009                    of object ProtoDomain
Registering instance PD0020                    of object ProtoDomain
called DEMOLISH on instance XPD0020 of object ProtoDomain of class Parser
called DEMOLISH on instance XPD0009 of object ProtoDomain of class Parser
called DEMOLISH on instance XD0005 of object Domain of class Parser
AUTOMETHOD get_mutation_rate_ref called on ParserInstance=SCALAR(D0005)
mutate_subseq: mutating 4 sequence bits starting at 5 with probability 0
mutate_subseq: mutated 0 sequence bits
mutated_field: mutated 0 bits in field S
mutate_subseq: mutating 2 sequence bits starting at 9 with probability 1
mutate_subseq: mutating bit at position 9, 1 -> 0
mutate_subseq: mutating bit at position 10, 0 -> 1
mutate_subseq: mutated 2 sequence bits
mutated_field: mutated 2 bits in field A
mutate_subseq: mutating 2 sequence bits starting at 11 with probability 1
mutate_subseq: mutating bit at position 11, 1 -> 0
mutate_subseq: mutating bit at position 12, 0 -> 1
mutate_subseq: mutated 2 sequence bits
mutated_field: mutated 2 bits in field B
mutate_subseq: mutating 2 sequence bits starting at 13 with probability 1
mutate_subseq: mutating bit at position 13, 0 -> 1
mutate_subseq: mutating bit at position 14, 0 -> 1
mutate_subseq: mutated 2 sequence bits
mutated_field: mutated 2 bits in field B_linker
mutate_subseq: mutating 2 sequence bits starting at 15 with probability 1
mutate_subseq: mutating bit at position 15, 1 -> 0
mutate_subseq: mutating bit at position 16, 1 -> 0
mutate_subseq: mutated 2 sequence bits
mutated_field: mutated 2 bits in field B
mutated: mutated 8 bits in PD0009
mutate_subseq: mutating 3 sequence bits starting at 17 with probability 1
mutate_subseq: mutating bit at position 17, 1 -> 0
mutate_subseq: mutating bit at position 18, 1 -> 0
mutate_subseq: mutating bit at position 19, 1 -> 0
mutate_subseq: mutated 3 sequence bits
mutated_field: mutated 3 bits in field PD_linker
mutate_subseq: mutating 2 sequence bits starting at 20 with probability 1
mutate_subseq: mutating bit at position 20, 1 -> 0
mutate_subseq: mutating bit at position 21, 0 -> 1
mutate_subseq: mutated 2 sequence bits
mutated_field: mutated 2 bits in field A
mutate_subseq: mutating 2 sequence bits starting at 22 with probability 1
mutate_subseq: mutating bit at position 22, 0 -> 1
mutate_subseq: mutating bit at position 23, 0 -> 1
mutate_subseq: mutated 2 sequence bits
mutated_field: mutated 2 bits in field B
mutate_subseq: mutating 2 sequence bits starting at 24 with probability 1
mutate_subseq: mutating bit at position 24, 0 -> 1
mutate_subseq: mutating bit at position 25, 1 -> 0
mutate_subseq: mutated 2 sequence bits
mutated_field: mutated 2 bits in field B_linker
mutate_subseq: mutating 2 sequence bits starting at 26 with probability 1
mutate_subseq: mutating bit at position 26, 1 -> 0
mutate_subseq: mutating bit at position 27, 1 -> 0
mutate_subseq: mutated 2 sequence bits
mutated_field: mutated 2 bits in field B
mutate_subseq: mutating 2 sequence bits starting at 28 with probability 1
mutate_subseq: mutating bit at position 28, 1 -> 0
mutate_subseq: mutating bit at position 29, 0 -> 1
mutate_subseq: mutated 2 sequence bits
mutated_field: mutated 2 bits in field B_linker
mutate_subseq: mutating 2 sequence bits starting at 30 with probability 1
mutate_subseq: mutating bit at position 30, 0 -> 1
mutate_subseq: mutating bit at position 31, 0 -> 1
mutate_subseq: mutated 2 sequence bits
mutated_field: mutated 2 bits in field B
mutate_subseq: mutating 2 sequence bits starting at 32 with probability 1
mutate_subseq: mutating bit at position 32, 0 -> 1
mutate_subseq: mutating bit at position 33, 0 -> 1
mutate_subseq: mutated 2 sequence bits
mutated_field: mutated 2 bits in field B_linker
mutate_subseq: mutating 2 sequence bits starting at 34 with probability 1
mutate_subseq: mutating bit at position 34, 1 -> 0
mutate_subseq: mutating bit at position 35, 1 -> 0
mutate_subseq: mutated 2 sequence bits
mutated_field: mutated 2 bits in field B
mutate_subseq: mutating 2 sequence bits starting at 36 with probability 1
mutate_subseq: mutating bit at position 36, 0 -> 1
mutate_subseq: mutating bit at position 37, 0 -> 1
mutate_subseq: mutated 2 sequence bits
mutated_field: mutated 2 bits in field B_linker
mutate_subseq: mutating 2 sequence bits starting at 38 with probability 1
mutate_subseq: mutating bit at position 38, 1 -> 0
mutate_subseq: mutating bit at position 39, 0 -> 1
mutate_subseq: mutated 2 sequence bits
mutated_field: mutated 2 bits in field B
mutated: mutated 20 bits in PD0020
mutate_subseq: mutating 3 sequence bits starting at 40 with probability 1
mutate_subseq: mutating bit at position 40, 1 -> 0
mutate_subseq: mutating bit at position 41, 1 -> 0
mutate_subseq: mutating bit at position 42, 0 -> 1
mutate_subseq: mutated 3 sequence bits
mutated_field: mutated 3 bits in field T
mutated: mutated 34 bits in D0005
BEFORE: 000000110101000111111000011110000011001011010001110100
AFTER:  000000110010111000000111100001111100110100110001110100
STORABLE TEST
clear_parser_instances: clearing all instances of Test
{
  'Instantiable' => {
                      'instances' => [],
                      'instances_index' => {}
                    },
  'Named' => {
               'name' => 'Test'
             },
  'Parser' => {
                'mutation_rate_ref' => {
                                         'A' => '1',
                                         'B' => '1',
                                         'elements_ref' => '1',
                                         'elements_ref_linker' => '1'
                                       },
                'structure_ref' => [
                                     [
                                       'A',
                                       '0110'
                                     ],
                                     [
                                       'B',
                                       '\\G[0-1]{3}'
                                     ],
                                     [
                                       'elements_ref',
                                       '\\G[0-1]{2}',
                                       '\\G01'
                                     ]
                                   ]
              },
  'Set' => {
             'element_class' => 'Parser',
             'elements_ref' => []
           }
};

{
  'Instantiable' => {
                      'instances' => [],
                      'instances_index' => {}
                    },
  'Named' => {
               'name' => 'Test'
             },
  'Parser' => {
                'mutation_rate_ref' => {
                                         'A' => '1',
                                         'B' => '1',
                                         'elements_ref' => '1',
                                         'elements_ref_linker' => '1'
                                       },
                'structure_ref' => [
                                     [
                                       'A',
                                       '0110'
                                     ],
                                     [
                                       'B',
                                       '\\G[0-1]{3}'
                                     ],
                                     [
                                       'elements_ref',
                                       '\\G[0-1]{2}',
                                       '\\G01'
                                     ]
                                   ]
              },
  'Set' => {
             'element_class' => 'Parser',
             'elements_ref' => []
           }
};

called DEMOLISH on instance D0005 of object Domain of class Parser
called DEMOLISH on instance PD0020 of object ProtoDomain of class Parser
called DEMOLISH on instance PD0009 of object ProtoDomain of class Parser
called DEMOLISH on instance T0039 of object Test of class Parser
called DEMOLISH on instance T0033 of object Test of class Parser
called DEMOLISH on instance T0005 of object Test of class Parser
